
" GUI オプション {{{

" スクロールバー削除
set guioptions-=r guioptions-=R guioptions-=l guioptions-=L

" }}}

" GUI フォント {{{

let s:font_settings = {
\   'nerd': {
\     'font': 'Droid Sans Mono for Powerline Plus Nerd File Types 10',
\     'wide': 'Ricty 10'
\   },
\   'source code pro': {
\     'font': 'Source Code Pro SemiBold 12'
\   },
\   'ricty': {
\     'font': 'Ricty 12'
\   },
\   'runez': {
\     'font': 'RUNEZ 12',
\     'wide': 'Ricty 12'
\   },
\   'vl gothic': {
\     'font': 'VL ゴシック 12'
\   }
\ }

function! s:SetGUIFont (setting)
  let &guifont = a:setting.font
  let &guifontwide = has_key(a:setting, 'wide') ? a:setting.wide : ''
endfunction

function! s:ComleteGUIFont (...)
  return keys(s:font_settings)
endfunction

command! -nargs=* -complete=customlist,s:ComleteGUIFont GUIFont call s:SetGUIFont(s:font_settings[<q-args>])

" デフォルトのフォント
GUIFont nerd

" J6uil バッファでは自動でフォント変更
function! J6uilGUIInit()
  if !exists('b:anekos_j6uil_initialized')
    GUIFont vl gothic
    XMonadRefreshWindow
    let b:anekos_j6uil_initialized = 1
  endif
endfunction

MeowtoCmd FileType J6uil call J6uilGUIInit()

" }}}

" 読書モード {{{

command! Yomi call yomi#start()
AlterCommand yomi Yomi

" }}}

" タブの表示 {{{

function! GuiTabLabel()
  let label = ''
  let bufnrlist = tabpagebuflist(v:lnum)

  " Add '+' if one of the buffers in the tab page is modified
  for bufnr in bufnrlist
    if getbufvar(bufnr, "&modified")
      let label = '+'
      break
    endif
  endfor

  " Append the number of windows in the tab page if more than one
  let wincount = tabpagewinnr(v:lnum, '$')
  if wincount > 1
    let label .= wincount
  endif
  if label != ''
    let label = '-' . label
  endif

  " Append the buffer name
  return label
  ". bufname(bufnrlist[tabpagewinnr(v:lnum) - 1])
endfunction

set guitablabel=%N%{GuiTabLabel()}:\ %t

" }}}
